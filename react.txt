https://metanit.com/web/react/
https://learn-reactjs.ru/tutorial


https://reactjs.org/
https://ru.reactjs.org/
https://github.com/facebook/react



https://bezkoder.com/react-material-ui-examples-crud/
https://bezkoder.com/django-react-axios-rest-framework/


React.js: понятное руководство для начинающих
https://habr.com/ru/company/ruvds/blog/428077/


??? Babel
??? chocolatey



Текущей версий на данный момент (октябрь 2017 года) является версия React v16.0.
на 23.11.2020 - react 17.0.1
Текущей версий на данный момент (октябрь 2020 года) является версия React v17.0.

React Native, которая уже предназначалась для мобильных устройств.

Виртуальный DOM

JSX представляет комбинацию кода JavaScript и XML и предоставляет простой и интуитивно понятный способ для определения кода визуального интерфейса.

При работе с JSX следует учитывать ряд моментов, в частности, в JSX для установки класса применяется атрибут className, а не class. Второй момент: атрибут style в качестве значения принимает объект javascript. И третий момент: в JSX используется camel-case, то есть если мы хотим определить стилевое свойство для шрифта, например, свойство font-family, то соответствующее свойство в объекте стиля будет называться fontFamily, то есть дефис отбрасывается, а следующая часть слова начинается с заглавной буквы. 





То есть в итоге в проекте будет три файла:
    index.html
    index.jsx
    package.json
	



РАНЬШЕ В 16 ВЕРСИИ
И теперь, когда все готово, запустим приложение. Для этого откроем командную строку/терминал и перейдем с помощью команды cd к папке проекта. Затем для установки зависимости lite-server выполним команду
npm install

Затем запустим приложение с помощью команды
npm start

ТЕПЕРЬ В 17 ВЕРСИИ
И теперь, когда все готово, запустим приложение. Для этого откроем командную строку/терминал и перейдем с помощью команды cd к папке проекта. Затем запустим приложение с помощью команды
node app.js



--------------
babel cli
Далее установим эти пакеты. И для этого перейдем в командной строке/терминале к папке проекта и выполним следующую команду
npm install

Итак, у нас есть файл index.jsx с кодом JSX, теперь скомпилируем его в файл index.js. Для этого выполним следующую команду:
npx babel index.jsx --out-file index.js

Здесь в секции scripts определена команда start, которая позволяет последовательно запустить обе команды и сразу скомпилировать файл javascrript и запустить сервер. Теперь нам достаточно выполнить в командной строке/консоли команду npm start:




React Developer Tools
https://chrome.google.com/webstore/detail/react-developer-tools/fmkadmapgofadopljbjfkapdkoienihi.



Глава 2 - Props
Если мы применяем классы, то для установки значений применяется статическое свойство defaultProps:

События
Обработка событий элементов в React во многом похожа на обработку событий элементов DOM с помощью обычного JavaScript. В то же время есть небольшие отличия:
    События в React используют camelCase (в стандартном html "onclick", в React - "onClick")
    В JSX в обработчик события передается функция компонента, а не строка

Обе эти проблемы нам поможет решить Webpack. Webpack представляет популярный упаковщик модулей, который позволяет автоматизировать создание из нескольких файлов один.


Webpack
В командной строке/терминале перейдем к папке проекта и установим все этим пакеты с помощью команды
npm install
Затем выполним команду
npm run dev

С этим приложением мы также можем работать, как и предыдущих темах. 
Однако чтобы сгенерировать файл приложени - сборку, которая будет содержать код всех файлов, нам надо выполнить другую команду, которая опредена в секции scripts в файле package.json:
npm run build





04 - Маршрутизация
Ключевым звеном в работе маршрутизации является модуль react-router, который содержит основной функционал по работе с маршрутизацией. Однако если мы собираемся работать в браузере, то нам надо использовать модуль react-router-dom



Ключевые моменты Redux:
    Хранилище (store): хранит состояние приложения
    Действия (actions): некоторый набор информации, который исходит от приложения к хранилищу и который указывает, что именно нужно сделать. Для передачи этой информации у хранилища вызывается метод dispatch().
    Создатели действий (action creators): функции, которые создают действия
    Reducer : функция (или несколько функций), которая получает действие и в соответствии с этим действием изменяет состояние хранилища


	
	
	